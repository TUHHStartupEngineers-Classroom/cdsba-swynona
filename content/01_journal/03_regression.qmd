---
title: "Regression and Statistical Inference"
author: "Sophia Wynona"
---

::: callout-note
Assignment III on Regression and Statistical Inference - final submission
:::

# Task 1
```{r}
install.packages("tidyverse")
library(tidyverse)

data <- readRDS("C:/Users/sophi/OneDrive/Desktop/Causal Data Science for Business Analytics 2023/gitclone/cdsba-swynona/assets/Causal_Data_Science_Data/car_prices.rds")
print(dim(data))
```
# Task 2
Type of Data is seen below.
```{r}
str(data)

```
Q : What data types do you see? 
A : Char and number

Q : How do numbers differ from strings regarding their data type?
A : The main difference between character (or string) and numeric data types is that numeric data can be used in mathematical operations, while character data cannot. For example, you can add, subtract, multiply, or divide numbers, but you cannot perform these operations on text or strings. Instead, strings are typically used for text manipulation operations, such as concatenation, substring, etc.

# Task 3
Run linear regression
```{r}
#assume 'price' is the dependent variable and all other variables are independent
model <- lm(price ~ ., data = data)
summary(model)

#choose 'horsepower' as the regressor
horsepower <- data$horsepower
print(typeof(horsepower))
print(range(horsepower))

# The coefficient of 'horsepower' in the model gives us the effect on price
coef(model)["horsepower"]

# The p-value of 'horsepower' in the model tells us about its statistical significance
summary(model)$coefficients["horsepower", "Pr(>|t|)"]


```

# Task 4
assignment 5 no 4:
Q : explain what data type it is and what values it can take on?
A: the ‘horsepower’ variable is of numeric data type. This means it can take on any real number,
Q : what effect is has on the price and what changing the value would have as a result?
A : as horsepower increases, the price of the car also increases
Q : whether its effect is statistically significant.
A : 

# Task 5

Q : Add a variable seat_heating to the data and assign a value TRUE for all observations. You can use e.g. df %>% mutate(new_variable = value). Assign it to a new object and run a regression. What coefficient do you get for the new variable seat_heating and how can you explain it?

```{r}
data <- data %>% mutate(seat_heating = TRUE)

# Run a regression with the new variable
model_with_seat_heating <- lm(price ~ ., data = data)
summary(model_with_seat_heating)

```

A : if the variable 'seat heating' is assigned to the data and is assigned a value 'TRUE for all observations, obtained coefficient is 'NA'.
This is because : iff an independent variable is constant and does not change across observations, it cannot explain any variation and its effect cannot be estimated, resulting in a NA coefficient in the regression output.