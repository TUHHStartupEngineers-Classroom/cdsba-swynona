---
title: "Probability Theory"
---

::: callout-note
Assignment I on Probability Theory
:::


# Assignment 1 - Solution 


```{r}
# Given Probabilities
p_S = 0.3 # probability of having a change in scope
p_S_prime = 0.7 # probability of having no change in scope
p_T_given_S = 0.2 # probability of being on time given a change in scope
p_T_prime_given_S = 0.8 # probability of not being on time given a change in scope
p_T_given_S_prime = 0.6 # probability of being on time given no change in scope
p_T_prime_given_S_prime = 0.4 # probability of not being on time given no change in scope

#intersection probabilities
p_T_and_S = p_S * p_T_given_S
p_T_and_S_prime = p_S_prime * p_T_given_S_prime
p_T_prime_and_S = p_S * p_T_prime_given_S
p_T_prime_and_S_prime = p_S_prime * p_T_prime_given_S_prime

#results
cat("P(T ∩ S) = ", p_T_and_S, "\n")
cat("P(T ∩ S') = ", p_T_and_S_prime, "\n")
cat("P(T' ∩ S) = ", p_T_prime_and_S, "\n")
cat("P(T' ∩ S') = ", p_T_prime_and_S_prime, "\n")

#sum of all four probabilities
sum_prob = p_T_and_S + p_T_and_S_prime + p_T_prime_and_S + p_T_prime_and_S_prime
cat("The sum of all four probabilities = ", sum_prob, "\n")

```

# Assignment 2 - Solution
```{r}
# What is the percentage of customers using all three devices?
percentage_all_three_devices <- 0.5

# What is the percentage of customers using at least two devices?
percentage_at_least_two_devices <- 7.3 + 3.3 + 8.8 + 0.5

# What is the percentage of customers using only one device?
percentage_only_one_device <- 42.3 + 27.8 + 10

# Print the answers
print(paste("Percentage of customers using all three devices: ", percentage_all_three_devices, "%"))
print(paste("Percentage of customers using at least two devices: ", percentage_at_least_two_devices, "%"))
print(paste("Percentage of customers using only one device: ", percentage_only_one_device, "%"))

```

# Assignment 3 - Solution
```{r}
# Known probabilities
P_B_given_A <- 0.97
P_B_given_not_A <- 0.01
P_A <- 0.04

# Compute P(not A)
P_not_A <- 1 - P_A

# Compute P(B)
P_B <- P_B_given_A * P_A + P_B_given_not_A * P_not_A

# Compute P(A|B) and P(not A|B)
P_A_given_B <- (P_B_given_A * P_A) / P_B
P_not_A_given_B <- (P_B_given_not_A * P_not_A) / P_B

# Print the results
print(paste("P(A|B) =", P_A_given_B))
print(paste("P(not A|B) =", P_not_A_given_B))

```







This is a `.qmd` file. It is plain text with special features. Any time you write just like this, it will be compiled to normal text in the website. If you put a \# in front of your text, it will create a top level-header.

To learn more about Quarto websites visit <https://quarto.org/docs/websites>.

# Text Formatting

*italics* and **bold**

superscript^2^ / subscript~2~

~~strikethrough~~

`verbatim code`

> Blockquote

# Headings

## Header 2
### Header 3
#### Header 4
##### Header 5
###### Header 6

# Links & Images

<https://quarto.org>

[Quarto](https://quarto.org)

![Caption](../../assets/img/elephant.png)

[![Caption](../../assets/img/elephant.png)](https://quarto.org)

[![Caption](../../assets/img/elephant.png)](https://quarto.org "An elephant")


# Lists

* unordered list
    + sub-item 1
    + sub-item 2
        - sub-sub-item 1
        
*   item 2

    Continued (indent 4 spaces)
    
    
1. ordered list
2. item 2
    i) sub-item 1
         A.  sub-sub-item 1
         
(@)  A list whose numbering

continues after

(@)  an interruption

# Tables

| Right | Left | Default | Center |
|------:|:-----|---------|:------:|
|   12  |  12  |    12   |    12  |
|  123  |  123 |   123   |   123  |
|    1  |    1 |     1   |     2  |

# Source Code

Use ``` to delimit blocks of source code:

```
code
```

Add a language to syntax highlight code blocks:

```{r}
1 + 1
```

```{r}
cars
```

```{r}
plot(cars)
```
